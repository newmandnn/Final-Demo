from flask import Flask, render_template
import random
import os

app = Flask(__name__)

quotes = [
    "Implement a Continuous Integration/Continuous Deployment (CI/CD) pipeline.  Implementing a Continuous Integration/Continuous Deployment (CI/CD) pipeline is the key to implementing a successful DevOps philosophy. A CI/CD pipeline automates the build, test, and deployment process, allowing organizations to quickly and reliably deliver code changes. A CI/CD pipeline also helps to robustly implement the “shift-to-left” concept in the development process.",
    "Embrace Agile Project Management Methodologies.  Agile project management methodologies, such as Scrum and Kanban, are well-suited to the fast-paced, iterative nature of DevOps. By embracing agile project management, organizations can break down large projects into smaller, more manageable chunks and deliver value to users more quickly. In addition, agile methodologies encourage frequent communication and collaboration between team members, which can help to identify and resolve issues more quickly.",
    "Practice Continuous Monitoring.  Continuous monitoring is an essential DevOps best practice, as it allows organizations to track the performance and stability of their systems in real-time. By constantly collecting and analyzing data from development processes, organizations can identify and resolve issues more quickly and make informed decisions about the direction of their products and services. This practice reduces the chances of potential issues becoming significant problems.",
    "Seek Continuous Feedback.\n  Seeking continuous feedback from users, stakeholders, and team members can improve the quality and relevance of an organization’s products and services. This feedback can be used to identify and resolve issues or discover opportunities for improvement. It also helps organizations foster a culture of collaboration and continuous learning, which benefits both the organization and its employees. For example, a DevOps engineer could be seeking Continuous Feedback during code reviews. They could conduct code reviews with other team members or stakeholders to gather feedback on the quality of the code, identify potential issues, and suggest improvements.",
    "Automate Routine Tasks. Automating routine tasks reduces the time and effort required to deliver the product to the end user. When everyday tasks, such as building and deploying code, running tests, and monitoring systems, are automated, organizations improve efficiency, reduce errors, and increase the reliability and scalability of their systems, ultimately reducing the cost and effort of delivery. It allows the DevOps teams to use the free time to focus on more strategic and value-added activities as Camil Blanaru, Site Reliability Engineer of Prezly suggests, “It is a common thing for a developer to request various resources from DevOps teams by creating tickets and waiting for their approval. This can be easily automated. There are so many tools these days; a developer can even make this request and get instant approval in Slack. This will also give you less distractions in your work.”",
    "Set Up Automated Testing.  Test automation can help organizations improve the quality and reliability of their code. By automating the testing process, organizations can cover many test cases that could have been missed in manual testing. As the test coverage increases, the risk of production bugs and human error decreases, which increases the time required to deploy and deliver the end product. Moreover, automated testing can provide immediate feedback, allowing teams to focus on essential issues and strategic activities while reducing the cost of software maintenance. Additionally, incorporating AIOps into these processes can further enhance efficiency and reliability.",
    "Foster a Collaborative Culture. A collaborative culture is an essential DevOps best practice. DevOps requires close collaboration between development and operations teams, as well as other stakeholders, to be successful. By fostering a culture of collaboration, organizations can encourage open communication, shared responsibility, and a focus on continuous improvement. This can help teams to identify and resolve issues more quickly, as well as improve the quality and reliability of their products and services. In addition, a collaborative culture can help create a more positive and productive work environment, which can benefit the organization and its employees.",
    "Choose the Right DevOps Tools.The right DevOps tools can make a big difference in the success of a DevOps implementation. These tools can include everything from version control systems and code repositories to testing and deployment tools. When selecting your DevOps toolchain, it’s important to consider the needs and goals of your organization, as well as the specific tasks and processes for which the tools will be used. It’s also important to choose tools that are easy to use and integrate with your existing systems. With the help of the right set of tools, an organization can generate the best return from their DevOps practice. They can improve efficiency, reduce errors, and accelerate value delivery to your users.",
    "Adopt a Microservices Architecture.  Adopting a microservices architecture can help organizations improve their systems’ flexibility, scalability, and resilience. In a microservices architecture, applications are decomposed into small, independent services that can be developed, tested, and deployed independently. This method helps organizations deliver new features and functionality more quickly and make it easier to scale and maintain their systems. In addition, microservices can help improve systems’ reliability and resilience, as failures in one service can be isolated and addressed without affecting the entire system.",
    "Improve Observability. Observability allows organizations to understand the behavior and performance of their systems in real time. By collecting and analyzing data from a variety of sources, including logs, metrics, and traces (also known as the three pillars of observability), organizations can identify and resolve issues more quickly and make informed decisions about the direction of their products and services. Sharing the analytics on relevant logs and metrics with other stakeholders of the organization also brings everyone in the organization together. This would translate to quick and easy assistance for end-users and high-quality software delivery.",
    "Integrate Continuous Security into the DevOps Process.Continuous Security is a combination of practices and tools that increases an organization’s ability to securely deliver applications with no known vulnerabilities in it. Continuous Security adds new tools for vulnerability scanning and secure storage (e.g. Vault), and introduces testing methods like Penetration Testing in the DevOps pipeline. However, it also enforces new practices for both developers (e.g. secure coding) and operations (logging and alerting). By integrating continuous security into the DevOps process, organizations can effectively transition from DevOps to DevSecOps. This transition ensures that security is considered at every stage of the development and deployment process. It can be instrumental in identifying and fixing security vulnerabilities more quickly, reducing the risk of security breaches, and maintaining the trust of your users.",
    "Infrastructure as Code (IaC). Infrastructure as Code (IaC) involves managing and provisioning infrastructure through code. It uses automation, version control, and continuous delivery to manage and maintain infrastructure, which allows for infrastructure consistency across different environments and reduces the risk of configuration drift. IaC is a fundamental practice to ensure business continuity incase of a disaster, as it ensures that the infrastructure is quickly spun off when needed. Moreover, it leverages the benefit of peer review. As Soham Chakraborty, a Systems Administrator/SRE at Sematext aptly puts forward – “An important aspect of Infrastructure as Code is that all of the code can be version controlled and put into a source code management system (like Git). This has immense benefit as the code can be peer reviewed, tracked and audited. Therefore if any time something created from the code malfunctions or doesn’t behave properly, anyone with access to the repository can check and find out the problem.”",
]

@app.route('/')
def index():
    random_quote = random.choice(quotes)
    build_number = os.environ.get('BUILD_NUMBER')
    return render_template('index.html', quote=random_quote, build_number=build_number)


if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0')